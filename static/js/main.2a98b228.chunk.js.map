{"version":3,"sources":["components/Filters/SortBy.jsx","components/Filters/Pagination.jsx","api/api.js","components/Filters/Genres.jsx","components/Filters/Filters.jsx","redux/actions/authActions.js","components/Movies/Favorit.jsx","components/Movies/Watchlist.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesContainer.jsx","components/Header/LoginForm.jsx","components/Header/Login.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","components/App.jsx","redux/reducers/authReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["years","from","to","i","push","getYears","SortBy","this","props","filters","sort_by","primary_release_year","onChangeFilters","options","className","htmlFor","id","name","value","onChange","map","option","key","label","React","Component","defaultProps","image","Pagination","page","total_pages","API_URL","API_KEY_3","fetchApi","url","Promise","resolve","reject","fetch","then","res","status","json","catch","error","Genres","state","genresList","getGenresList","setState","genres","onChangeGenres","genre","type","checked","includes","String","Filters","onChangePage","onReset","onClick","disabled","bind","PureComponent","updateAuth","payload","toggleModal","getFavorits","session_id","user","dispatch","favorits","updateFavoriteMovies","results","getWatchlist","watchlists","updateWatchlistMovies","Favorit","isFavorite","movie","findIndex","item","favoriteApi","method","mode","headers","body","JSON","stringify","media_type","media_id","favorite","console","log","mapDispatchToProps","connect","authReducer","Watchlist","isLoading","isWatchlist","watchlist","MovieItem","src","backdrop_path","poster_path","alt","title","vote_average","MoviesList","movies","MoviesContainer","getMovies","prevProps","tokenApi","tokenWithLoginApi","sessionIdApi","LoginForm","username","password","repeatPassword","errors","submitting","e","target","prevState","handleBlur","validateFields","Object","keys","length","onSubmit","request_token","base","status_message","onLogin","preventDefault","classNames","placeholder","onBlur","Login","showModal","Modal","isOpen","toggle","ModalBody","UserMenu","dropdownOpen","toggleDropdown","handleLogOut","onLogOut","Dropdown","DropdownToggle","tag","data-toggle","aria-expanded","width","avatar","gravatar","hash","DropdownMenu","right","DropdownItem","Header","href","cookies","Cookies","App","link","join","response","data","event","filter","el","initialState","get","combineReducers","action","set","path","maxAge","remove","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a98b228.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction getYears(from, to) {\r\n  let years = [];\r\n  for (let i = from; i <= to; i++) {\r\n    years.push(i);\r\n  }\r\n  return years;\r\n}\r\n\r\nconst years = getYears(1950, 2025);\r\n\r\nexport default class SortBy extends React.Component {\r\n  static propTypes = {\r\n    filters: PropTypes.object.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: [\r\n      {\r\n        label: \"Популярные по убыванию\",\r\n        value: \"popularity.desc\",\r\n        image: \"/lol.jpg\",\r\n      },\r\n      {\r\n        label: \"Популярные по возростанию\",\r\n        value: \"popularity.asc\",\r\n      },\r\n      {\r\n        label: \"Рейтинг по убыванию\",\r\n        value: \"vote_average.desc\",\r\n      },\r\n      {\r\n        label: \"Рейтинг по возростанию\",\r\n        value: \"vote_average.asc\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filters: { sort_by, primary_release_year },\r\n      onChangeFilters,\r\n      options,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\r\n        <select\r\n          id=\"sort_by\"\r\n          className=\"form-control\"\r\n          name=\"sort_by\"\r\n          value={sort_by}\r\n          onChange={onChangeFilters}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"primary_release_year\">Сортировать по году:</label>\r\n        <select\r\n          className=\"form-control\"\r\n          value={primary_release_year}\r\n          onChange={onChangeFilters}\r\n          id=\"primary_release_year\"\r\n          name=\"primary_release_year\"\r\n        >\r\n          {years.map((option) => (\r\n            <option key={option} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n  const { page, total_pages } = props;\r\n  return (\r\n    <div className=\"text-center\">\r\n      <span>{`${page} of ${total_pages}`}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"b3ff350532467eb0b07cf18d16f4a254\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiM2ZmMzUwNTMyNDY3ZWIwYjA3Y2YxOGQxNmY0YTI1NCIsInN1YiI6IjVkZWJlZWIzZGFmNTdjMDAxNWVhOWVhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.442u7uWzvay-kNfCoZWJ7h-5KWhh9qWCJHHqA3jjOBw\";\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n      .then((res) => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          throw res;\r\n        }\r\n      })\r\n      .then((res) => resolve(res))\r\n      .catch((res) => res.json().then((error) => reject(error)));\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\n\r\nexport default class Genres extends React.Component {\r\n  state = {\r\n    genresList: [],\r\n  };\r\n\r\n  getGenresList = () => {\r\n    fetch(`${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`)\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState(this.setState({ genresList: res.genres })));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGenresList();\r\n  }\r\n\r\n  render() {\r\n    const { genresList } = this.state;\r\n    const {\r\n      filters: { genres },\r\n      onChangeGenres,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {genresList.map((genre) => (\r\n          <div key={genre.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={genre.name}\r\n              id={genre.id}\r\n              value={genre.id}\r\n              checked={genres.includes(String(genre.id))}\r\n              onChange={onChangeGenres}\r\n            />\r\n            <label htmlFor={genre.id} className=\"ml-2\">\r\n              {genre.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SortBy from \"./SortBy\";\r\nimport Pagination from \"./Pagination\";\r\nimport Genres from \"./Genres\";\r\n\r\nexport default class Filters extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      filters,\r\n      page,\r\n      onChangeFilters,\r\n      onChangePage,\r\n      total_pages,\r\n      onReset,\r\n      onChangeGenres,\r\n    } = this.props;\r\n    return (\r\n      <form className=\"mb-3\">\r\n        <button type=\"button\" className=\"btn btn-light my-2\" onClick={onReset}>\r\n          Сбросить фильтры\r\n        </button>\r\n        <SortBy filters={filters} onChangeFilters={onChangeFilters} />\r\n        <div className=\"btn-group my-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            disabled={page === 1}\r\n            onClick={onChangePage.bind(null, page - 1)}\r\n          >\r\n            Назад\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            disabled={page === total_pages}\r\n            onClick={onChangePage.bind(null, page + 1)}\r\n          >\r\n            Вперед\r\n          </button>\r\n        </div>\r\n        <Pagination page={page} total_pages={total_pages} />\r\n        <h3 className=\"my-4\">Жанры:</h3>\r\n        <Genres filters={filters} onChangeGenres={onChangeGenres} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { fetchApi, API_KEY_3, API_URL } from \"../../api/api\";\r\n\r\nexport const updateAuth = (payload) => {\r\n  return { type: \"UPDATE_AUTH\", payload };\r\n};\r\n\r\nexport const onLogOut = () => {\r\n  return { type: \"LOG_OUT\" };\r\n};\r\n\r\nexport const toggleModal = () => {\r\n  return { type: \"TOGGLE_MODAL\" };\r\n};\r\n\r\nexport const getFavorits = ({ session_id, user }) => (dispatch) => {\r\n  fetchApi(\r\n    `${API_URL}/account/${user.id}/favorite/movies?api_key=${API_KEY_3}&session_id=${session_id}&language=ru-RU`\r\n  ).then((favorits) => {\r\n    dispatch(updateFavoriteMovies(favorits.results));\r\n  });\r\n};\r\n\r\nexport const updateFavoriteMovies = (favorits) => {\r\n  return {\r\n    type: \"UPDATE_FAVORITE_MOVIES\",\r\n    payload: favorits,\r\n  };\r\n};\r\n\r\nexport const getWatchlist = ({ session_id, user }) => (dispatch) => {\r\n  fetchApi(\r\n    `${API_URL}/account/${user.id}/watchlist/movies?api_key=${API_KEY_3}&session_id=${session_id}&language=ru-RU`\r\n  ).then((watchlists) => {\r\n    dispatch(updateWatchlistMovies(watchlists.results));\r\n  });\r\n};\r\n\r\nexport const updateWatchlistMovies = (watchlists) => {\r\n  return {\r\n    type: \"UPDATE_WATCHLIST_MOVIES\",\r\n    payload: watchlists,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Star from \"@material-ui/icons/Star\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport { fetchApi, API_KEY_3, API_URL } from \"../../api/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal, getFavorits } from \"../../redux/actions/authActions\";\r\n\r\nclass Favorit extends React.Component {\r\n  isFavorite = () => {\r\n    const { favorits, movie } = this.props;\r\n\r\n    return favorits.findIndex((item) => item.id === movie.id) !== -1;\r\n  };\r\n\r\n  onClick = () => {\r\n    const {\r\n      movie: { id },\r\n      session_id,\r\n      user,\r\n      getFavorits,\r\n      toggleModal,\r\n    } = this.props;\r\n\r\n    if (session_id) {\r\n      const favoriteApi = `${API_URL}/account/${user.id}}/favorite?api_key=${API_KEY_3}&session_id=${session_id}`;\r\n      fetchApi(favoriteApi, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          media_type: \"movie\",\r\n          media_id: id,\r\n          favorite: !this.isFavorite(),\r\n        }),\r\n      }).then((res) => {\r\n        getFavorits({ session_id, user });\r\n        console.log(res);\r\n      });\r\n    } else {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.isFavorite() ? (\r\n          <Star onClick={this.onClick} />\r\n        ) : (\r\n          <StarBorder onClick={this.onClick} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorits: state.authReducer.favorits,\r\n    user: state.authReducer.user,\r\n    session_id: state.authReducer.session_id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { toggleModal, getFavorits };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorit);\r\n","import React from \"react\";\r\nimport Bookmark from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorder from \"@material-ui/icons/BookmarkBorder\";\r\nimport { fetchApi, API_KEY_3, API_URL } from \"../../api/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal, getWatchlist } from \"../../redux/actions/authActions\";\r\n\r\nclass Watchlist extends React.Component {\r\n  state = {\r\n    isLoading: false,\r\n  };\r\n\r\n  isWatchlist = () => {\r\n    const { watchlists, movie } = this.props;\r\n\r\n    return watchlists.findIndex((item) => item.id === movie.id) !== -1;\r\n  };\r\n\r\n  onClick = () => {\r\n    const {\r\n      movie: { id },\r\n      session_id,\r\n      user,\r\n      getWatchlist,\r\n      toggleModal,\r\n    } = this.props;\r\n\r\n    if (session_id) {\r\n      const favoriteApi = `${API_URL}/account/${user.id}}/watchlist?api_key=${API_KEY_3}&session_id=${session_id}`;\r\n      this.setState({ isLoading: true });\r\n\r\n      fetchApi(favoriteApi, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          media_type: \"movie\",\r\n          media_id: id,\r\n          watchlist: !this.isWatchlist(),\r\n        }),\r\n      }).then((res) => {\r\n        this.setState({ isLoading: false }, () => {\r\n          getWatchlist({ session_id, user });\r\n          console.log(res);\r\n        });\r\n      });\r\n    } else {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.isWatchlist() ? (\r\n          <Bookmark\r\n            onClick={this.onClick}\r\n            className={this.state.isLoading ? \"disable\" : null}\r\n          />\r\n        ) : (\r\n          <BookmarkBorder\r\n            onClick={this.onClick}\r\n            className={this.state.isLoading ? \"disable\" : null}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    watchlists: state.authReducer.watchlists,\r\n    user: state.authReducer.user,\r\n    session_id: state.authReducer.session_id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { toggleModal, getWatchlist };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Watchlist);\r\n","import React from \"react\";\r\nimport Favorit from \"./Favorit\";\r\nimport Watchlist from \"./Watchlist\";\r\n\r\nexport default class MovieItem extends React.Component {\r\n  render() {\r\n    const { movie, getFavorits, getWatchlist } = this.props;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card-img-top card-img--height\"\r\n          src={\r\n            movie.backdrop_path || movie.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${\r\n                  movie.backdrop_path || movie.poster_path\r\n                }`\r\n              : \"https://i.ya-webdesign.com/images/video-camera-png-icon.png\"\r\n          }\r\n          alt=\"img\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-title\">{movie.title}</h6>\r\n          <div className=\"card-text\">Рейтинг: {movie.vote_average}</div>\r\n          <Favorit movie={movie} getFavorits={getFavorits} />\r\n          <Watchlist movie={movie} getWatchlist={getWatchlist} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MoviesList = ({\r\n  movies,\r\n  session_id,\r\n  favorits,\r\n  watchlist,\r\n  user,\r\n  getFavorits,\r\n  getWatchlist,\r\n  toggleModal,\r\n}) => (\r\n  <div className=\"row\">\r\n    {movies.map((movie) => {\r\n      return (\r\n        <div key={movie.id} className=\"col-6 mb-4\">\r\n          <MovieItem\r\n            movie={movie}\r\n            getFavorits={getFavorits}\r\n            getWatchlist={getWatchlist}\r\n          />\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n);\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MoviesList;\r\n","import React, { Component } from \"react\";\r\nimport MoviesList from \"./MoviesList\";\r\n\r\nexport default class MoviesContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.getMovies();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { filters, onChangePage, getMovies, page } = this.props;\r\n    if (filters !== prevProps.filters) {\r\n      onChangePage(1);\r\n      getMovies();\r\n    }\r\n\r\n    if (page !== prevProps.page) {\r\n      getMovies();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, getFavorits, getWatchlist, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        {isLoading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          <MoviesList\r\n            movies={movies}\r\n            getFavorits={getFavorits}\r\n            getWatchlist={getWatchlist}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\nimport { fetchApi } from \"../../api/api\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateAuth } from \"../../redux/actions/authActions\";\r\n\r\nconst tokenApi = `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`;\r\nconst tokenWithLoginApi = `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`;\r\nconst sessionIdApi = `https://api.themoviedb.org/3/authentication/session/new?api_key=${API_KEY_3}`;\r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    errors: {},\r\n    submitting: false,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      [name]: value,\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: null,\r\n        base: null,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    const { name } = e.target;\r\n    const errors = this.validateFields();\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          [name]: errors[name],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  validateFields = () => {\r\n    const errors = {};\r\n\r\n    if (this.state.username === \"\") {\r\n      errors.username = \"Обязательно\";\r\n    }\r\n\r\n    if (this.state.password === \"\") {\r\n      errors.password = \"Обязательно\";\r\n    }\r\n\r\n    if (this.state.repeatPassword !== this.state.password) {\r\n      errors.repeatPassword = \"Должен быть равен паролю\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const { username, password } = this.state;\r\n    let session_id = null;\r\n    //1\r\n    this.setState({\r\n      submitting: true,\r\n    });\r\n    fetchApi(tokenApi)\r\n      .then(({ request_token }) => {\r\n        //2\r\n        return fetchApi(tokenWithLoginApi, {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username,\r\n            password,\r\n            request_token,\r\n          }),\r\n        });\r\n      })\r\n      .then(({ request_token }) => {\r\n        //3\r\n        return fetchApi(sessionIdApi, {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            request_token,\r\n          }),\r\n        });\r\n      })\r\n      .then((res) => {\r\n        session_id = res.session_id;\r\n        return fetchApi(\r\n          `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\r\n        );\r\n      })\r\n      .then((user) => {\r\n        this.setState(\r\n          {\r\n            submitting: false,\r\n          },\r\n          () => this.props.updateAuth({ session_id, user })\r\n        );\r\n      })\r\n\r\n      .catch((error) =>\r\n        this.setState({\r\n          submitting: false,\r\n          errors: {\r\n            base: error.status_message,\r\n          },\r\n        })\r\n      );\r\n  };\r\n\r\n  onLogin = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validateFields();\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          ...errors,\r\n        },\r\n      }));\r\n    } else {\r\n      this.onSubmit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      errors,\r\n      submitting,\r\n      repeatPassword,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"form-login-container\">\r\n        <form className=\"form-login\">\r\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\r\n            Авторизация\r\n          </h1>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Пользователь</label>\r\n            <input\r\n              type=\"text\"\r\n              className={classNames(\"form-control\", {\r\n                \"border-red\": errors.username,\r\n              })}\r\n              id=\"username\"\r\n              placeholder=\"Пользователь\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={this.onChange}\r\n              onBlur={this.handleBlur}\r\n            />\r\n            {errors.username && (\r\n              <div className=\"invalid\">{errors.username}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Пароль</label>\r\n            <input\r\n              type=\"password\"\r\n              className={classNames(\"form-control\", {\r\n                \"border-red\": errors.password,\r\n              })}\r\n              id=\"password\"\r\n              placeholder=\"Пароль\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              onBlur={this.handleBlur}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid\">{errors.password}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"repeatPassword\">Повторите пароль</label>\r\n            <input\r\n              type=\"password\"\r\n              className={classNames(\"form-control\", {\r\n                \"border-red\": errors.repeatPassword,\r\n              })}\r\n              id=\"repeatPassword\"\r\n              placeholder=\"Повторите пароль\"\r\n              name=\"repeatPassword\"\r\n              value={repeatPassword}\r\n              onChange={this.onChange}\r\n              onBlur={this.handleBlur}\r\n            />\r\n            {errors.repeatPassword && (\r\n              <div className=\"invalid\">{errors.repeatPassword}</div>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-lg btn-primary btn-block\"\r\n            onClick={this.onLogin}\r\n            disabled={submitting}\r\n          >\r\n            Вход\r\n          </button>\r\n          {errors.base && (\r\n            <div className=\"invalid text-center\">{errors.base}</div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.authReducer.user,\r\n    session_id: state.authReducer.session_id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { updateAuth };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from \"react\";\r\nimport { Modal, ModalBody } from \"reactstrap\";\r\nimport { toggleModal } from \"../../redux/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    const { toggleModal, showModal } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"btn btn-success\" type=\"button\" onClick={toggleModal}>\r\n          Login\r\n        </button>\r\n        <Modal isOpen={showModal} toggle={toggleModal}>\r\n          <ModalBody>\r\n            <LoginForm />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    showModal: state.authReducer.showModal,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { toggleModal };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { fetchApi, API_URL, API_KEY_3 } from \"../../api/api\";\r\nimport { onLogOut } from \"../../redux/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserMenu extends Component {\r\n  state = {\r\n    dropdownOpen: false,\r\n  };\r\n\r\n  toggleDropdown = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownOpen: !prevState.dropdownOpen,\r\n    }));\r\n  };\r\n\r\n  handleLogOut = () => {\r\n    fetchApi(`${API_URL}/authentication/session?api_key=${API_KEY_3}`, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        session_id: this.props.session_id,\r\n      }),\r\n    }).then(() => {\r\n      this.props.onLogOut();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n        <DropdownToggle\r\n          tag=\"div\"\r\n          onClick={this.toggleDropdown}\r\n          data-toggle=\"dropdown\"\r\n          aria-expanded={this.state.dropdownOpen}\r\n        >\r\n          <img\r\n            width=\"40\"\r\n            className=\"rounded-circle\"\r\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\r\n            alt=\"\"\r\n            onClick={this.toggleDropdown}\r\n          />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem onClick={this.handleLogOut}>Выйти</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.authReducer.user,\r\n    session_id: state.authReducer.session_id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { onLogOut };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-primary\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {this.props.user ? <UserMenu /> : <Login />}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.authReducer.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport Filters from \"./Filters/Filters\";\r\nimport MoviesContainer from \"./Movies/MoviesContainer\";\r\nimport { API_URL, API_KEY_3, fetchApi } from \"../api/api\";\r\nimport Header from \"./Header/Header\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateAuth,\r\n  getFavorits,\r\n  getWatchlist,\r\n} from \"../redux/actions/authActions\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.initialState = {\r\n      isLoading: false,\r\n      filters: {\r\n        sort_by: \"popularity.desc\",\r\n        primary_release_year: 2020,\r\n        genres: [],\r\n      },\r\n      page: 1,\r\n      movies: [],\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  getMovies = () => {\r\n    const {\r\n      filters: { sort_by, primary_release_year, genres },\r\n      page,\r\n    } = this.state;\r\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}&primary_release_year=${primary_release_year}&with_genres=${genres.join(\r\n      \",\"\r\n    )}`;\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(link)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          movies: data.results,\r\n          total_pages: data.total_pages,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeFilters = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState((prevState) => ({\r\n      filters: {\r\n        ...prevState.filters,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  onChangePage = (page) => {\r\n    this.setState({\r\n      page,\r\n    });\r\n  };\r\n\r\n  onChangeGenres = (e) => {\r\n    const { value, checked } = e.target;\r\n    this.setState((state) => {\r\n      const {\r\n        filters: { genres },\r\n      } = state;\r\n      return {\r\n        filters: {\r\n          ...state.filters,\r\n          genres: checked\r\n            ? [...genres, value]\r\n            : genres.filter((el) => el !== value),\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  onReset = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ filters: this.initialState.filters });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const session_id = cookies.get(\"session_id\");\r\n    const { updateAuth, getFavorits, getWatchlist } = this.props;\r\n\r\n    if (session_id) {\r\n      fetchApi(\r\n        `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\r\n      ).then((user) => {\r\n        updateAuth({ session_id, user });\r\n        getFavorits({ session_id, user });\r\n        getWatchlist({ session_id, user });\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { session_id, user, getFavorits, getWatchlist } = this.props;\r\n\r\n    if (session_id) {\r\n      if (user !== prevProps.user) {\r\n        getFavorits({ session_id, user });\r\n        getWatchlist({ session_id, user });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filters, page, movies, total_pages, isLoading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h3>Фильтры:</h3>\r\n                  <Filters\r\n                    page={page}\r\n                    filters={filters}\r\n                    total_pages={total_pages}\r\n                    onChangeFilters={this.onChangeFilters}\r\n                    onChangePage={this.onChangePage}\r\n                    onReset={this.onReset}\r\n                    onChangeGenres={this.onChangeGenres}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <MoviesContainer\r\n                page={page}\r\n                filters={filters}\r\n                movies={movies}\r\n                isLoading={isLoading}\r\n                onChangePage={this.onChangePage}\r\n                getMovies={this.getMovies}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.authReducer.user,\r\n    session_id: state.authReducer.session_id,\r\n  };\r\n};\r\nconst mapDispatchToProps = { updateAuth, getFavorits, getWatchlist };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  session_id: cookies.get(\"session_id\"),\r\n  showModal: false,\r\n  favorits: [],\r\n  watchlists: [],\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_AUTH\": {\r\n      cookies.set(\"session_id\", action.payload.session_id, {\r\n        path: \"/\",\r\n        maxAge: 2592000,\r\n      });\r\n      return {\r\n        ...state,\r\n        session_id: action.payload.session_id,\r\n        user: action.payload.user,\r\n      };\r\n    }\r\n    case \"LOG_OUT\": {\r\n      cookies.remove(\"session_id\");\r\n      return {\r\n        ...state,\r\n        session_id: null,\r\n        user: null,\r\n        favorits: [],\r\n        watchlists: [],\r\n      };\r\n    }\r\n    case \"TOGGLE_MODAL\": {\r\n      return {\r\n        ...state,\r\n        showModal: !state.showModal,\r\n      };\r\n    }\r\n    case \"UPDATE_FAVORITE_MOVIES\":\r\n      return {\r\n        ...state,\r\n        favorits: action.payload,\r\n      };\r\n    case \"UPDATE_WATCHLIST_MOVIES\":\r\n      return {\r\n        ...state,\r\n        watchlists: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./reducers/authReducer\";\r\n\r\nexport default combineReducers({\r\n  authReducer,\r\n});\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./stylesheets/index.css\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}