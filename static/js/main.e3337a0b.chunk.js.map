{"version":3,"sources":["components/Filters/SortBy.jsx","components/Filters/Pagination.jsx","api/api.js","components/Filters/Genres.jsx","components/Filters/Filters.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Header/LoginForm.jsx","components/Header/Login.jsx","components/Header/User.jsx","components/Header/Header.jsx","components/App.jsx","index.js"],"names":["years","from","to","i","push","getYears","SortBy","this","props","filters","sort_by","primary_release_year","onChangeFilters","options","className","htmlFor","id","name","value","onChange","map","option","key","label","React","Component","defaultProps","image","Pagination","page","total_pages","API_URL","API_KEY_3","fetchApi","url","Promise","resolve","reject","fetch","then","res","status","json","catch","error","Genres","state","genresList","getGenresList","setState","genres","onChangeGenres","genre","type","checked","includes","String","Filters","onChangePage","onReset","onClick","disabled","bind","Moviemovie","movie","src","backdrop_path","poster_path","alt","title","vote_average","MovieList","getMovies","prevProps","movies","tokenApi","tokenWithLoginApi","sessionIdApi","LoginForm","username","password","repeatPassword","errors","submitting","e","target","prevState","handleBlur","console","log","validateFields","Object","keys","length","onSubmit","request_token","method","mode","headers","body","JSON","stringify","session_id","updateSessionId","user","updateUser","base","status_message","onLogin","preventDefault","classNames","placeholder","onBlur","Login","showModal","toggleModal","Modal","isOpen","toggle","ModalBody","User","width","avatar","gravatar","hash","Header","href","cookies","Cookies","App","set","path","maxAge","link","join","response","data","results","event","filter","el","initialState","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3337a0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction getYears(from, to) {\r\n  let years = [];\r\n  for (let i = from; i <= to; i++) {\r\n    years.push(i);\r\n  }\r\n  return years;\r\n}\r\n\r\nconst years = getYears(1950, 2025);\r\n\r\nexport default class SortBy extends React.Component {\r\n  static propTypes = {\r\n    filters: PropTypes.object.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: [\r\n      {\r\n        label: \"Популярные по убыванию\",\r\n        value: \"popularity.desc\",\r\n        image: \"/lol.jpg\",\r\n      },\r\n      {\r\n        label: \"Популярные по возростанию\",\r\n        value: \"popularity.asc\",\r\n      },\r\n      {\r\n        label: \"Рейтинг по убыванию\",\r\n        value: \"vote_average.desc\",\r\n      },\r\n      {\r\n        label: \"Рейтинг по возростанию\",\r\n        value: \"vote_average.asc\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filters: { sort_by, primary_release_year },\r\n      onChangeFilters,\r\n      options,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\r\n        <select\r\n          id=\"sort_by\"\r\n          className=\"form-control\"\r\n          name=\"sort_by\"\r\n          value={sort_by}\r\n          onChange={onChangeFilters}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"primary_release_year\">Сортировать по году:</label>\r\n        <select\r\n          className=\"form-control\"\r\n          value={primary_release_year}\r\n          onChange={onChangeFilters}\r\n          id=\"primary_release_year\"\r\n          name=\"primary_release_year\"\r\n        >\r\n          {years.map((option) => (\r\n            <option key={option} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n  const { page, total_pages } = props;\r\n  return (\r\n    <div className=\"text-center\">\r\n      <span>{`${page} of ${total_pages}`}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"b3ff350532467eb0b07cf18d16f4a254\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiM2ZmMzUwNTMyNDY3ZWIwYjA3Y2YxOGQxNmY0YTI1NCIsInN1YiI6IjVkZWJlZWIzZGFmNTdjMDAxNWVhOWVhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.442u7uWzvay-kNfCoZWJ7h-5KWhh9qWCJHHqA3jjOBw\";\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n      .then((res) => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          throw res;\r\n        }\r\n      })\r\n      .then((res) => resolve(res))\r\n      .catch((res) => res.json().then((error) => reject(error)));\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\n\r\nexport default class Genres extends React.Component {\r\n  state = {\r\n    genresList: [],\r\n  };\r\n\r\n  getGenresList = () => {\r\n    fetch(`${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`)\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState(this.setState({ genresList: res.genres })));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGenresList();\r\n  }\r\n\r\n  render() {\r\n    const { genresList } = this.state;\r\n    const {\r\n      filters: { genres },\r\n      onChangeGenres,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {genresList.map((genre) => (\r\n          <div key={genre.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={genre.name}\r\n              id={genre.id}\r\n              value={genre.id}\r\n              checked={genres.includes(String(genre.id))}\r\n              onChange={onChangeGenres}\r\n            />\r\n            <label htmlFor={genre.id} className=\"ml-2\">\r\n              {genre.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SortBy from \"./SortBy\";\r\nimport Pagination from \"./Pagination\";\r\nimport Genres from \"./Genres\";\r\n\r\nexport default class Filters extends React.Component {\r\n  render() {\r\n    const {\r\n      filters,\r\n      page,\r\n      onChangeFilters,\r\n      onChangePage,\r\n      total_pages,\r\n      onReset,\r\n      onChangeGenres,\r\n    } = this.props;\r\n    return (\r\n      <form className=\"mb-3\">\r\n        <button type=\"button\" className=\"btn btn-light my-2\" onClick={onReset}>\r\n          Сбросить фильтры\r\n        </button>\r\n        <SortBy filters={filters} onChangeFilters={onChangeFilters} />\r\n        <div className=\"btn-group my-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            disabled={page === 1}\r\n            onClick={onChangePage.bind(null, page - 1)}\r\n          >\r\n            Назад\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            disabled={page === total_pages}\r\n            onClick={onChangePage.bind(null, page + 1)}\r\n          >\r\n            Вперед\r\n          </button>\r\n        </div>\r\n        <Pagination page={page} total_pages={total_pages} />\r\n        <h3 className=\"my-4\">Жанры:</h3>\r\n        <Genres filters={filters} onChangeGenres={onChangeGenres} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Moviemovie extends React.Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card-img-top card-img--height\"\r\n          src={\r\n            movie.backdrop_path || movie.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${\r\n                  movie.backdrop_path || movie.poster_path\r\n                }`\r\n              : \"https://i.ya-webdesign.com/images/video-camera-png-icon.png\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-title\">{movie.title}</h6>\r\n          <div className=\"card-text\">Рейтинг: {movie.vote_average}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\nexport default class MovieList extends Component {\r\n  componentDidMount() {\r\n    this.props.getMovies();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { filters, onChangePage, getMovies, page } = this.props;\r\n    if (filters !== prevProps.filters) {\r\n      onChangePage(1);\r\n      getMovies();\r\n    }\r\n\r\n    if (page !== prevProps.page) {\r\n      getMovies();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <div key={movie.id} className=\"col-6 mb-4\">\r\n              <MovieItem movie={movie} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\nimport { fetchApi } from \"../../api/api\";\r\nimport classNames from \"classnames\";\r\n\r\nconst tokenApi = `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`;\r\nconst tokenWithLoginApi = `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`;\r\nconst sessionIdApi = `https://api.themoviedb.org/3/authentication/session/new?api_key=${API_KEY_3}`;\r\n\r\nexport default class LoginForm extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    errors: {},\r\n    submitting: false,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      [name]: value,\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: null,\r\n        base: null,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleBlur = (e) => {\r\n    console.log(e.target.name);\r\n    const { name } = e.target;\r\n    const errors = this.validateFields();\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          [name]: errors[name],\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  validateFields = () => {\r\n    const errors = {};\r\n\r\n    if (this.state.username === \"\") {\r\n      errors.username = \"Обязательно\";\r\n    }\r\n\r\n    if (this.state.password === \"\") {\r\n      errors.password = \"Обязательно\";\r\n    }\r\n\r\n    if (this.state.repeatPassword !== this.state.password) {\r\n      errors.repeatPassword = \"Должен быть равен паролю\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const { username, password } = this.state;\r\n\r\n    //1\r\n    this.setState({\r\n      submitting: true,\r\n    });\r\n    fetchApi(tokenApi)\r\n      .then(({ request_token }) => {\r\n        //2\r\n        return fetchApi(tokenWithLoginApi, {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username,\r\n            password,\r\n            request_token,\r\n          }),\r\n        });\r\n      })\r\n      .then(({ request_token }) => {\r\n        //3\r\n        return fetchApi(sessionIdApi, {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            request_token,\r\n          }),\r\n        });\r\n      })\r\n      .then(({ session_id }) => {\r\n        this.props.updateSessionId(session_id);\r\n        return fetchApi(\r\n          `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\r\n        );\r\n      })\r\n      .then((user) => {\r\n        this.props.updateUser(user);\r\n        this.setState({\r\n          submitting: false,\r\n        });\r\n      })\r\n\r\n      .catch((error) =>\r\n        this.setState({\r\n          submitting: false,\r\n          errors: {\r\n            base: error.status_message,\r\n          },\r\n        })\r\n      );\r\n  };\r\n\r\n  onLogin = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validateFields();\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          ...errors,\r\n        },\r\n      }));\r\n    } else {\r\n      this.onSubmit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      errors,\r\n      submitting,\r\n      repeatPassword,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"form-login-container\">\r\n        <form className=\"form-login\">\r\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\r\n            Авторизация\r\n          </h1>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Пользователь</label>\r\n            <input\r\n              type=\"text\"\r\n              className={classNames(\"form-control\", {\r\n                \"border-red\": errors.username,\r\n              })}\r\n              id=\"username\"\r\n              placeholder=\"Пользователь\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={this.onChange}\r\n              onBlur={this.handleBlur}\r\n            />\r\n            {errors.username && (\r\n              <div className=\"invalid-feedback\">{errors.username}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Пароль</label>\r\n            <input\r\n              type=\"password\"\r\n              className={classNames(\"form-control\", {\r\n                \"border-red\": errors.password,\r\n              })}\r\n              id=\"password\"\r\n              placeholder=\"Пароль\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              onBlur={this.handleBlur}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback\">{errors.password}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"repeatPassword\">Повторите пароль</label>\r\n            <input\r\n              type=\"password\"\r\n              className={classNames(\"form-control\", {\r\n                \"border-red\": errors.repeatPassword,\r\n              })}\r\n              id=\"repeatPassword\"\r\n              placeholder=\"Повторите пароль\"\r\n              name=\"repeatPassword\"\r\n              value={repeatPassword}\r\n              onChange={this.onChange}\r\n              onBlur={this.handleBlur}\r\n            />\r\n            {errors.repeatPassword && (\r\n              <div className=\"invalid-feedback\">{errors.repeatPassword}</div>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-lg btn-primary btn-block\"\r\n            onClick={this.onLogin}\r\n            disabled={submitting}\r\n          >\r\n            Вход\r\n          </button>\r\n          {errors.base && (\r\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Modal, ModalBody } from \"reactstrap\";\r\n\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState((state) => {\r\n      return { showModal: !state.showModal };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { updateUser, updateSessionId } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          type=\"button\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          Login\r\n        </button>\r\n        <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n          <ModalBody>\r\n            <LoginForm\r\n              updateUser={updateUser}\r\n              updateSessionId={updateSessionId}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class User extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <img\r\n          width=\"40\"\r\n          className=\"rounded-circle\"\r\n          src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\r\n          alt=\"user\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport User from \"./User\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const { user, updateUser, updateSessionId } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-primary\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {user ? (\r\n            <User user={user} />\r\n          ) : (\r\n            <Login updateUser={updateUser} updateSessionId={updateSessionId} />\r\n          )}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Filters from \"./Filters/Filters\";\r\nimport MoviesList from \"./Movies/MoviesList\";\r\nimport { API_URL, API_KEY_3, fetchApi } from \"../api/api\";\r\nimport Header from \"./Header/Header\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.initialState = {\r\n      user: null,\r\n      session_id: null,\r\n      filters: {\r\n        sort_by: \"popularity.desc\",\r\n        primary_release_year: 2020,\r\n        genres: [],\r\n      },\r\n      page: 1,\r\n      movies: [],\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  updateUser = (user) => {\r\n    this.setState({\r\n      user,\r\n    });\r\n  };\r\n\r\n  updateSessionId = (session_id) => {\r\n    cookies.set(\"session_id\", session_id, {\r\n      path: \"/\",\r\n      maxAge: 2592000,\r\n    });\r\n    this.setState({\r\n      session_id,\r\n    });\r\n  };\r\n\r\n  getMovies = () => {\r\n    const {\r\n      filters: { sort_by, primary_release_year, genres },\r\n      page,\r\n    } = this.state;\r\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}&primary_release_year=${primary_release_year}&with_genres=${genres.join(\r\n      \",\"\r\n    )}`;\r\n\r\n    fetch(link)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          movies: data.results,\r\n          total_pages: data.total_pages,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeFilters = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState((prevState) => ({\r\n      filters: {\r\n        ...prevState.filters,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  onChangePage = (page) => {\r\n    this.setState({\r\n      page,\r\n    });\r\n  };\r\n\r\n  onChangeGenres = (e) => {\r\n    const { value, checked } = e.target;\r\n    this.setState((state) => {\r\n      const {\r\n        filters: { genres },\r\n      } = state;\r\n      return {\r\n        filters: {\r\n          ...state.filters,\r\n          genres: checked\r\n            ? [...genres, value]\r\n            : genres.filter((el) => el !== value),\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  onReset = (event) => {\r\n    event.preventDefault();\r\n    this.setState(this.initialState);\r\n    this.getMovies();\r\n  };\r\n\r\n  componentDidMount() {\r\n    const session_id = cookies.get(\"session_id\");\r\n    if (session_id) {\r\n      fetchApi(\r\n        `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\r\n      ).then((user) => {\r\n        this.updateUser(user);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filters, page, movies, total_pages, user } = this.state;\r\n    return (\r\n      <>\r\n        <Header\r\n          user={user}\r\n          updateUser={this.updateUser}\r\n          updateSessionId={this.updateSessionId}\r\n        />\r\n        <div className=\"container\">\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h3>Фильтры:</h3>\r\n                  <Filters\r\n                    page={page}\r\n                    filters={filters}\r\n                    total_pages={total_pages}\r\n                    onChangeFilters={this.onChangeFilters}\r\n                    onChangePage={this.onChangePage}\r\n                    onReset={this.onReset}\r\n                    onChangeGenres={this.onChangeGenres}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <MoviesList\r\n                page={page}\r\n                getMovies={this.getMovies}\r\n                filters={filters}\r\n                movies={movies}\r\n                onChangePage={this.onChangePage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./stylesheets/index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}